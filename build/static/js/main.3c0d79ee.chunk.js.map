{"version":3,"sources":["actions.js","App.js","IndexPage.js","ShowPage.js","index.js"],"names":["updatePage","state","data","Object","objectSpread","page","loadIndex","route","context","type","scrollTo","Http","url","action","prev","threads","GetThreads","params","loadShow","item","id","kids","Views","index","src","show","RouterView","_ref","router","current","View","Link","_ref2","children","to","href","App","className","App_Link","App_RouterView","initialState","init","error","loading","routes","/","/:type","/s/:id","app","view","src_App_0","subscriptions","Router","node","document","getElementById"],"mappings":"yMAGMA,EAAa,SAACC,EAAOC,GAAR,OAAAC,OAAAC,EAAA,EAAAD,CAAA,GACdF,EADc,CAEjBI,KAAKF,OAAAC,EAAA,EAAAD,CAAA,GACAF,EAAMI,KACNH,MAsBMI,EAAYC,gBAAM,QAAS,SAACN,EAAOO,GAK9C,OAhBiB,SAACP,EAAOQ,GAAR,MAAiB,CAClCT,EAAWC,EAAO,CAAEQ,SACpB,CACEC,qBACAC,YAAK,CACHC,IAXJ,sEAYIC,OAAQ,SAACC,EAAMC,GAAP,OAAmBf,EAAWc,EAAM,CAAEC,iBAU3CC,CAAWf,EAJLO,EAAQS,OAAOR,MAAQ,SAOzBS,EAAWX,gBAAM,OAAQ,SAACN,EAAOO,GAC5C,IAAMW,EAAO,CAAEC,GAAIZ,EAAQS,OAAOG,GAAIC,KAAM,IAO5C,MAAO,CACLrB,EAAWC,EAAO,CAChBkB,SAEF,CAACT,yBC5CCY,aAAQ,CACZC,MCJa,WACb,OAAOpB,OAAAqB,EAAA,EAAArB,CAAA,0BDIPsB,KELa,WACb,OAAOtB,OAAAqB,EAAA,EAAArB,CAAA,2BFOHuB,EAAa,SAAAC,GAAsB,IAAnBtB,EAAmBsB,EAAnBtB,KAAMuB,EAAaD,EAAbC,OAC1B,GAAIA,EAAOC,WAAWP,EAAO,CAC3B,IAAMQ,EAAOR,EAAMM,EAAOC,SAC1B,OAAO1B,OAAAqB,EAAA,EAAArB,CAAC2B,EAAD,CAAMzB,KAAMA,EAAMuB,OAAQA,IAEnC,OAAOzB,OAAAqB,EAAA,EAAArB,CAAA,mCAGH4B,EAAO,SAAAC,EAASC,GAAT,IAAGC,EAAHF,EAAGE,GAAH,OAAsB/B,OAAAqB,EAAA,EAAArB,CAAA,KAAGgC,KAAMD,GAAKD,IAalCG,EAXH,SAACnC,GAAD,OACVE,OAAAqB,EAAA,EAAArB,CAAA,OAAKkC,UAAU,OACblC,OAAAqB,EAAA,EAAArB,CAAA,cACEA,OAAAqB,EAAA,EAAArB,CAACmC,EAAD,CAAMJ,GAAG,KAAT,QACA/B,OAAAqB,EAAA,EAAArB,CAACmC,EAAD,CAAMJ,GAAG,QAAT,UACA/B,OAAAqB,EAAA,EAAArB,CAACmC,EAAD,CAAMJ,GAAG,QAAT,WAEF/B,OAAAqB,EAAA,EAAArB,CAACoC,EAAetC,KGrBduC,EAAe,CACnBZ,OAAQ,CAAEa,MAAM,GAChBpC,KAAM,CAAEH,KAAM,GAAIwC,MAAO,GAAIC,SAAS,IAQlCC,EAAS,CACbC,IAAKvC,EACLwC,SAAUxC,EACVyC,SAAU7B,GAGZ8B,YAAI,CACFP,KAAM,kBAAMD,GACZS,KAAM,SAAAtB,GAAA,IAAGC,EAAHD,EAAGC,OAAQvB,EAAXsB,EAAWtB,KAAX,OAAsBF,OAAAqB,EAAA,EAAArB,CAAC+C,EAAD,CAAK7C,KAAMA,EAAMuB,OAAQA,KACrDuB,cAAe,iBAAM,CACnBC,iBAAO,CACLR,aAGJS,KAAMC,SAASC,eAAe","file":"static/js/main.3c0d79ee.chunk.js","sourcesContent":["import { Http } from \"@martel/hyperapp-fx\";\nimport { route, scrollTo } from \"hyperapp-page-router\";\n\nconst updatePage = (state, data) => ({\n  ...state,\n  page: {\n    ...state.page,\n    ...data,\n  },\n});\n\nconst apiUrl =\n  \"https://xenodochial-kirch-761cfe.netlify.app/.netlify/functions/api\";\n\n// this.threads = ((await response.json()) as Array<Thread>).filter(\n//   thread => thread.image && thread.poster.avatar\n// );\n\nconst GetThreads = (state, type) => [\n  updatePage(state, { type }),\n  [\n    scrollTo(),\n    Http({\n      url: apiUrl,\n      action: (prev, threads) => updatePage(prev, { threads }),\n    }),\n  ],\n];\n\nexport const loadIndex = route(\"index\", (state, context) => {\n  const type = context.params.type || \"top\";\n\n  // const isChange = state.page !== \"index\" || type !== state.stories.type;\n\n  return GetThreads(state, type);\n});\n\nexport const loadShow = route(\"show\", (state, context) => {\n  const item = { id: context.params.id, kids: [] };\n\n  // const isChange = state.page !== \"show\" || item.id !== state.story.item.id;\n\n  // update page data to\n  // loading:true\n  // route: context.current\n  return [\n    updatePage(state, {\n      item,\n    }),\n    [scrollTo()],\n  ];\n});\n","import { h } from \"hyperapp\";\nimport \"./App.css\";\nimport Index from \"./IndexPage.js\";\nimport Show from \"./ShowPage.js\";\n\nconst Views = {\n  index: Index,\n  show: Show,\n};\n\nconst RouterView = ({ page, router }) => {\n  if (router.current in Views) {\n    const View = Views[router.current];\n    return <View page={page} router={router} />;\n  }\n  return <div>Ooops ... Not Found</div>;\n};\n\nconst Link = ({ to }, children) => <a href={to}>{children}</a>;\n\nconst App = (state) => (\n  <div className=\"App\">\n    <header>\n      <Link to=\"/\">Home</Link>\n      <Link to=\"/s/1\">Show 1</Link>\n      <Link to=\"/s/2\">Show 2</Link>\n    </header>\n    <RouterView {...state} />\n  </div>\n);\n\nexport default App;\n","import { h } from \"hyperapp\";\n\nexport default () => {\n  return <div>Index Page</div>;\n};\n\n","import { h } from \"hyperapp\";\n\nexport default () => {\n  return <div>Show Page</div>;\n};\n","import { h, app } from \"hyperapp\";\nimport { router as Router } from \"hyperapp-page-router\";\nimport { loadIndex, loadShow } from \"./actions\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nconst initialState = {\n  router: { init: false },\n  page: { data: {}, error: {}, loading: true },\n};\n\n// Routes\n//\n// Maps to actions\n// actions must update page: {} to at least set route property to a named value\n// ie: page: { current: \"index\" }\nconst routes = {\n  \"/\": loadIndex,\n  \"/:type\": loadIndex,\n  \"/s/:id\": loadShow,\n};\n\napp({\n  init: () => initialState,\n  view: ({ router, page }) => <App page={page} router={router} />,\n  subscriptions: () => [\n    Router({\n      routes,\n    }),\n  ],\n  node: document.getElementById(\"app\"),\n});\n"],"sourceRoot":""}